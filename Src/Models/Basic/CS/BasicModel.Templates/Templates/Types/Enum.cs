// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 12.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace BasicModel.Templates.CS.Templates.Types
{
    using System.IO;
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using Codge.DataModel;
    using Codge.Generator;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "D:\work\Codge\Src\Models\Basic\CS\BasicModel.Templates\Templates\Types\Enum.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "12.0.0.0")]
    public partial class Enum : T4TemplateAction<TypeBase>
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("\r\n\r\nnamespace Types.");
            
            #line 11 "D:\work\Codge\Src\Models\Basic\CS\BasicModel.Templates\Templates\Types\Enum.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Type.Namespace.GetFullName(".")));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n\tenum ");
            
            #line 13 "D:\work\Codge\Src\Models\Basic\CS\BasicModel.Templates\Templates\Types\Enum.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Type.Name));
            
            #line default
            #line hidden
            this.Write("\r\n\t{\r\n\r\n");
            
            #line 16 "D:\work\Codge\Src\Models\Basic\CS\BasicModel.Templates\Templates\Types\Enum.tt"
				
					bool first=true;
					foreach(var item in Type.Items)
					{
						string prefix = first ? "" : ",";

            
            #line default
            #line hidden
            this.Write("\t\t");
            
            #line 22 "D:\work\Codge\Src\Models\Basic\CS\BasicModel.Templates\Templates\Types\Enum.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(prefix));
            
            #line default
            #line hidden
            
            #line 22 "D:\work\Codge\Src\Models\Basic\CS\BasicModel.Templates\Templates\Types\Enum.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(item.Name));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 23 "D:\work\Codge\Src\Models\Basic\CS\BasicModel.Templates\Templates\Types\Enum.tt"
						
						first=false;
					}

            
            #line default
            #line hidden
            this.Write("\t\r\n\t}\r\n}\r\n\r\n\r\n");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 32 "D:\work\Codge\Src\Models\Basic\CS\BasicModel.Templates\Templates\Types\Enum.tt"

	public EnumerationType Type{get; private set;}

	public Enum(TypeBase type)
	{
		Type = type as EnumerationType;
	}

	public override bool IsApplicable()
	{
		return Type!=null;
	}

	public override PathAndContent Execute(Context context)
	{
		return new PathAndContent(Utils.GetOutputPath(Type, "Types", "cs"), TransformText());
	}

        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
}
