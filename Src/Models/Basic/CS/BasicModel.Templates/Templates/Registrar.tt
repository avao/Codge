<#@ template debug="true" hostspecific="false" language="C#" inherits="T4TemplateAction<Model>" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Codge.DataModel" #>
<#@ import namespace="Codge.Generator" #>
using Codge.BasicModel.CS.Serialisation;

namespace Serialisers.<#= Model.Namespace.GetFullName(".") #>
{

	public static class Registrar
	{
		public static void RegisterSerialisers(SerialisationContext context)
		{
<#
					foreach(var type in Model.Namespace.AllTypes().Where(t => t is CompositeType))
					{
#>
			context.RegisterSerialiser<<#= type.QName() #>>(new <#= type.SerialiserQName() #>());
<#		
					}
#>
		}
	}
}

<#+
	public Model Model{get; private set;}

	public Registrar(Model model)
	{
		Model = model;
	}

	public override bool IsApplicable()
	{
		return true;
	}

	public override PathAndContent Execute(Context context)
	{
		return new PathAndContent("Registrar.cs", TransformText());
	}
#>